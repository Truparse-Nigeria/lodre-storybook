{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/merchant-navbar/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAiC,QAAQ,EAAE,MAAM,OAAO,CAAC;AACvE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,IAAI,CAAC;AAChC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,aAAa,CAAC;AAE1C,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AAU/E,IAAM,cAAc,GAAgB,UAAC,EAMpC;QALC,IAAI,UAAA,EACJ,GAAG,SAAA,EACH,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,WAAW,iBAAA;IAEL,IAAA,KAAkB,QAAQ,CAAU,KAAK,CAAC,EAAzC,IAAI,QAAA,EAAE,OAAO,QAA4B,CAAC;IACjD,OAAO,CACL;QACE,oBAAC,YAAY;YACX,oBAAC,UAAU;gBACT,oBAAC,IAAI,IAAC,UAAU,EAAC,QAAQ;oBACvB,oBAAC,QAAQ,IACP,KAAK,EAAE,EAAE,EACT,MAAM,EAAE,EAAE,EACV,SAAS,EAAC,WAAW,EACrB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,CAAC,IAAI,CAAC,EAAd,CAAc,GAC7B;oBACF,0CAAG,IAAI,CAAI,CACN;gBAEP,iCAAM,GAAG,CAAO,CACL,CACA;QACf,oBAAC,UAAU;YACT,oBAAC,IAAI,IACH,SAAS,EAAC,MAAM,EAChB,EAAE,EAAE,UAAG,WAAW,WAAQ,EAC1B,EAAE,EAAE,UAAG,WAAW,WAAQ,EAC1B,EAAE,EAAE,UAAG,WAAW,WAAQ,EAC1B,EAAE,EAAC,KAAK;gBAER,oBAAC,aAAa,IAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI;oBAC3C,oBAAC,IAAI,IAAC,cAAc,EAAC,KAAK;wBACxB,0CACG,IAAI,IAAI,CACP,oBAAC,CAAC,IAAC,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,EAAd,CAAc,GAAI,CAC5D,CACA,CACE;oBACN,WAAW,CACE;gBAChB,0CAAG,QAAQ,CAAI,CACV,CACI,CACT,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import React, { FC, ReactChild, ReactChildren, useState } from \"react\";\r\nimport { Flex, Grid } from \"..\";\r\nimport { MenuLine, X } from \"../../icons\";\r\n\r\nimport { StyledGrid, StyledMain, StyledNavbar, StyledSideNav } from \"./styled\";\r\n\r\nexport interface INavbar {\r\n  nav?: JSX.Element | JSX.Element[];\r\n  logo?: JSX.Element;\r\n  sideNavSize?: number;\r\n  children?: ReactChild | ReactChildren | JSX.Element | JSX.Element[];\r\n  navChildren?: ReactChild | ReactChildren | JSX.Element | JSX.Element[];\r\n}\r\n\r\nconst MerchantNavbar: FC<INavbar> = ({\r\n  logo,\r\n  nav,\r\n  sideNavSize,\r\n  children,\r\n  navChildren,\r\n}) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  return (\r\n    <div>\r\n      <StyledNavbar>\r\n        <StyledGrid>\r\n          <Flex alignItems=\"center\">\r\n            <MenuLine\r\n              width={24}\r\n              height={24}\r\n              className=\"menu-icon\"\r\n              onClick={() => setOpen(!open)}\r\n            />\r\n            <>{logo}</>\r\n          </Flex>\r\n\r\n          <div>{nav}</div>\r\n        </StyledGrid>\r\n      </StyledNavbar>\r\n      <StyledMain>\r\n        <Grid\r\n          className=\"main\"\r\n          xl={`${sideNavSize}px 1fr`}\r\n          lg={`${sideNavSize}px 1fr`}\r\n          md={`${sideNavSize}px 1fr`}\r\n          sm=\"1fr\"\r\n        >\r\n          <StyledSideNav width={sideNavSize} open={open}>\r\n            <Flex justifyContent=\"end\">\r\n              <>\r\n                {open && (\r\n                  <X width={18} height={18} onClick={() => setOpen(false)} />\r\n                )}\r\n              </>\r\n            </Flex>\r\n            {navChildren}\r\n          </StyledSideNav>\r\n          <>{children}</>\r\n        </Grid>\r\n      </StyledMain>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MerchantNavbar;\r\n"]}