{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../src/components/button/button.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAwC,MAAM,OAAO,CAAC;AAG7D,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAWxC,IAAM,MAAM,GAAoD,UAAC,EAMhE;IALC,IAAA,QAAQ,cAAA,EACR,eAAiB,EAAjB,OAAO,mBAAG,OAAO,KAAA,EACjB,YAAgB,EAAhB,IAAI,mBAAG,SAAS,KAAA,EAChB,aAAiB,EAAjB,KAAK,mBAAG,SAAS,KAAA,EACd,IAAI,cALwD,wCAMhE,CADQ;IAEP,OAAO,CACL,oBAAC,YAAY,aAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,IAAM,IAAI,GAC/D,QAAQ,CACI,CAChB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import React, { FC, HTMLAttributes, ReactNode } from 'react';\nimport { PaletteType } from '../../tokens/color';\nimport { ComponentSize } from '../../tokens/sizes';\nimport { StyledButton } from './styled';\n\nexport type ButtonVariant = 'block' | 'outline';\n\nexport interface IButton {\n  children?: ReactNode;\n  variant?: ButtonVariant;\n  size?: ComponentSize;\n  usage?: PaletteType;\n}\n\nconst Button: FC<IButton & HTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  variant = 'block',\n  size = 'default',\n  usage = 'primary',\n  ...rest\n}) => {\n  return (\n    <StyledButton size={size} variant={variant} usage={usage} {...rest}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n"]}