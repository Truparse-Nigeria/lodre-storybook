{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../src/components/button/button.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAwC,MAAM,OAAO,CAAC;AAG7D,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAaxC,IAAM,MAAM,GAAoD,UAAC,EAQhE;IAPC,IAAA,QAAQ,cAAA,EACR,eAAiB,EAAjB,OAAO,mBAAG,OAAO,KAAA,EACjB,YAAgB,EAAhB,IAAI,mBAAG,SAAS,KAAA,EAChB,aAAiB,EAAjB,KAAK,mBAAG,SAAS,KAAA,EACjB,aAAa,EAAb,KAAK,mBAAG,KAAK,KAAA,EACb,gBAAgB,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EACb,IAAI,cAPwD,6DAQhE,CADQ;IAEP,OAAO,CACL,oBAAC,YAAY,aACX,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,IACd,IAAI,GAEP,QAAQ,CACI,CAChB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import React, { FC, HTMLAttributes, ReactNode } from \"react\";\r\nimport { PaletteType } from \"../../tokens/color\";\r\nimport { ComponentSize } from \"../../tokens/sizes\";\r\nimport { StyledButton } from \"./styled\";\r\n\r\nexport type ButtonVariant = \"block\" | \"outline\";\r\n\r\nexport interface IButton {\r\n  children?: ReactNode;\r\n  variant?: ButtonVariant;\r\n  size?: ComponentSize;\r\n  usage?: PaletteType;\r\n  fluid?: boolean;\r\n  iconOnly?: boolean;\r\n}\r\n\r\nconst Button: FC<IButton & HTMLAttributes<HTMLButtonElement>> = ({\r\n  children,\r\n  variant = \"block\",\r\n  size = \"default\",\r\n  usage = \"primary\",\r\n  fluid = false,\r\n  iconOnly = false,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledButton\r\n      size={size}\r\n      variant={variant}\r\n      usage={usage}\r\n      fluid={fluid}\r\n      iconOnly={iconOnly}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"]}