{"version":3,"file":"styled.js","sourceRoot":"","sources":["../../../src/components/button/styled.ts"],"names":[],"mappings":";;;;AAAA,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAEvC,OAAO,EAAE,OAAO,EAAe,MAAM,oBAAoB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,WAAW,EAAc,MAAM,mBAAmB,CAAC;AACvE,OAAO,EAAiB,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAQnF,MAAM,CAAC,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,wYAAmB,2FAIzC,EAAY,iBACnB,EAGuB,sCAEpB,EAAoC,oBACpC,EAAgB,sBACd,EAAgB,eACrB,EAA2C,gBAC5C,EAAY,yBACD,EAC8C,iEAMnE,KAlBkB,MAAM,CAAC,KAAK,EACnB,UAAC,KAAK;IACd,OAAA,KAAK,CAAC,OAAO,KAAK,OAAO;QACvB,CAAC,CAAC,oBAAa,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAE;QACrC,CAAC,CAAC,oBAAa,OAAO,CAAC,IAAI,CAAE;AAF/B,CAE+B,EAEpB,UAAC,KAAK,IAAK,OAAA,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,EAAzB,CAAyB,EACpC,SAAS,CAAC,MAAM,EACd,WAAW,CAAC,IAAI,EACrB,UAAC,KAAK,IAAK,OAAA,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAhC,CAAgC,EAC5C,OAAO,CAAC,IAAI,EACD,UAAC,KAAK;IACxB,OAAA,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa;AAAhE,CAAgE,CAMnE,CAAC","sourcesContent":["import styled from 'styled-components';\r\nimport { ButtonVariant } from '.';\r\nimport { PALETTE, PaletteType } from '../../tokens/color';\r\nimport { FONT_SIZE, FONT_WEIGHT, TYPOGRAPHY } from '../../tokens/font';\r\nimport { ComponentSize, HEIGHTS, RADIUS, SIDE_PADDINGS } from '../../tokens/sizes';\r\n\r\ninterface StyledButtonProps {\r\n  size: ComponentSize;\r\n  variant: ButtonVariant;\r\n  usage: PaletteType;\r\n}\r\n\r\nexport const StyledButton = styled.button<StyledButtonProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: ${RADIUS.small}px;\r\n  border: ${(props) =>\r\n    props.variant === 'block'\r\n      ? `1px solid ${PALETTE[props.usage]}`\r\n      : `1px solid ${PALETTE.dark}`};\r\n  cursor: pointer;\r\n  padding: 0 ${(props) => SIDE_PADDINGS[props.size]}px;\r\n  font-size: ${FONT_SIZE.pSmall}px;\r\n  font-weight: ${FONT_WEIGHT.w700};\r\n  height: ${(props) => HEIGHTS.buttons[props.size] || 0}px;\r\n  color: ${PALETTE.dark};\r\n  background-color: ${(props) =>\r\n    props.variant === 'block' ? PALETTE[props.usage] : 'transparent'};\r\n  min-width: 200px;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n"]}