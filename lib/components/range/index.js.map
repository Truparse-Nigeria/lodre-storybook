{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/range/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAuB,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,WAAW,EAAE,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAO7D,IAAM,KAAK,GAAG,UAAC,EAIW;IAHxB,IAAA,eAAe,qBAAA,EACf,eAAe,qBAAA,EACZ,KAAK,cAHK,sCAId,CADS;IAEF,IAAA,KAAgB,QAAQ,CAAS,eAAe,CAAC,EAAhD,GAAG,QAAA,EAAE,MAAM,QAAqC,CAAC;IAClD,IAAA,KAAgB,QAAQ,CAAS,eAAe,CAAC,EAAhD,GAAG,QAAA,EAAE,MAAM,QAAqC,CAAC;IAExD,OAAO,CACL;QACE,oBAAC,oBAAoB;YACnB;;gBAAU,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAS;YAC9D,oBAAC,WAAW,aAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAM,KAAK,EAAI;YAC9C;;gBAAU,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAS,CACzC;QAEvB;YACE,oBAAC,WAAW,IACV,KAAK,EAAC,KAAK,EACX,YAAY,EAAE,GAAG,EACjB,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAtB,CAAsB,EACvC,WAAW,EAAC,KAAK,GACjB;YACD,KAAK;YACN,oBAAC,WAAW,IACV,KAAK,EAAC,KAAK,EACX,YAAY,EAAE,GAAG,EACjB,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAtB,CAAsB,EACvC,WAAW,EAAC,KAAK,GACjB,CACE,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,KAAK,CAAC","sourcesContent":["import React, { InputHTMLAttributes, useState } from \"react\";\r\nimport { StyledInput } from \"../input/styled\";\r\nimport StyledRange, { StyledRangeContainer } from \"./styled\";\r\n\r\nexport interface RangeControlProps extends InputHTMLAttributes<InputEvent> {\r\n  initialMinValue: string;\r\n  initialMaxValue: string;\r\n}\r\n\r\nconst Range = ({\r\n  initialMinValue,\r\n  initialMaxValue,\r\n  ...props\r\n}: any & RangeControlProps) => {\r\n  const [min, setMin] = useState<string>(initialMinValue);\r\n  const [max, setMax] = useState<string>(initialMaxValue);\r\n\r\n  return (\r\n    <>\r\n      <StyledRangeContainer>\r\n        <small>₦ {new Intl.NumberFormat().format(Number(min))}</small>\r\n        <StyledRange min={min} max={max} {...props} />\r\n        <small>₦ {new Intl.NumberFormat().format(Number(max))}</small>\r\n      </StyledRangeContainer>\r\n\r\n      <div>\r\n        <StyledInput\r\n          width=\"10%\"\r\n          defaultValue={min}\r\n          onChange={(e) => setMin(e.target.value)}\r\n          placeholder=\"Min\"\r\n        />\r\n        {\" - \"}\r\n        <StyledInput\r\n          width=\"10%\"\r\n          defaultValue={max}\r\n          onChange={(e) => setMax(e.target.value)}\r\n          placeholder=\"Max\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Range;\r\n"]}