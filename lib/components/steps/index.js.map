{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/steps/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAa,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAY3E,IAAM,KAAK,GAAmB,UAAC,EAA+B;QAA7B,aAAU,EAAV,KAAK,mBAAG,EAAE,KAAA,EAAE,gBAAe,EAAf,QAAQ,mBAAG,IAAI,KAAA;IAC1D,OAAO,CACL,oBAAC,IAAI,IACH,EAAE,EAAE,iBAAU,KAAK,CAAC,MAAM,WAAQ,EAClC,EAAE,EAAE,iBAAU,KAAK,CAAC,MAAM,WAAQ,EAClC,EAAE,EAAE,iBAAU,KAAK,CAAC,MAAM,WAAQ,EAClC,EAAE,EAAE,iBAAU,KAAK,CAAC,MAAM,WAAQ,EAClC,cAAc,EAAC,eAAe,IAE7B,KAAK,CAAC,GAAG,CAAC,UAAC,IAAU,EAAE,KAAa,IAAK,OAAA,CACxC,oBAAC,mBAAmB,IAAC,MAAM,EAAE,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK;QACjE,oBAAC,IAAI,IAAC,EAAE,EAAC,UAAU,EAAC,EAAE,EAAC,UAAU,EAAC,GAAG,EAAE,GAAG,EAAE,UAAU,EAAC,QAAQ;YAC7D,oBAAC,UAAU,IAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IACxB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CACX,oBAAC,SAAS,IAAC,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,GAAI,CACrC,CAAC,CAAC,CAAC,CACF,oBAAC,SAAS,IAAC,SAAS,EAAC,QAAQ,EAAC,MAAM,EAAC,MAAM,IACxC,KAAK,GAAG,CAAC,CACA,CACb,CACU;YACb,oBAAC,SAAS,IAAC,SAAS,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,IACtC,IAAI,CAAC,IAAI,CACA,CACP;QACN,QAAQ,IAAI,oBAAC,cAAc,IAAC,MAAM,EAAE,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,GAAI,CAC/C,CACvB,EAlByC,CAkBzC,CAAC,CACG,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,KAAK,CAAC","sourcesContent":["import React, { FC } from \"react\";\r\nimport { Grid, Paragraph } from \"..\";\r\nimport { CheckLine } from \"../../icons\";\r\nimport { StyledStep, StyledStepContainer, StyledStepLine } from \"./styled\";\r\n\r\nexport interface Step {\r\n  step: string;\r\n  done: boolean;\r\n}\r\n\r\nexport interface StepsProps {\r\n  steps: Array<Step>;\r\n  showLine: boolean;\r\n}\r\n\r\nconst Steps: FC<StepsProps> = ({ steps = [], showLine = true }) => {\r\n  return (\r\n    <Grid\r\n      xl={`repeat(${steps.length}, 1fr)`}\r\n      lg={`repeat(${steps.length}, 1fr)`}\r\n      md={`repeat(${steps.length}, 1fr)`}\r\n      sm={`repeat(${steps.length}, 1fr)`}\r\n      justifyContent=\"space-between\"\r\n    >\r\n      {steps.map((step: Step, index: number) => (\r\n        <StyledStepContainer isLast={index === steps.length - 1} key={index}>\r\n          <Grid sm=\"50px 1fr\" xs=\"50px 1fr\" gap={0.2} alignItems=\"center\">\r\n            <StyledStep done={step.done}>\r\n              {step.done ? (\r\n                <CheckLine width={16} height={16} />\r\n              ) : (\r\n                <Paragraph className=\"number\" weight=\"w500\">\r\n                  {index + 1}\r\n                </Paragraph>\r\n              )}\r\n            </StyledStep>\r\n            <Paragraph className=\"text\" weight=\"w500\">\r\n              {step.step}\r\n            </Paragraph>\r\n          </Grid>\r\n          {showLine && <StyledStepLine isLast={index === steps.length - 1} />}\r\n        </StyledStepContainer>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Steps;\r\n"]}